setwd("H:/20250330 figure+code/Figure 1/Fig. 1h")
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
rm(list =ls())
p1 = read.csv("F:/RA/第一次投稿/审稿意见/附图1/prob9 RT m_z.csv");p1$ID = paste(p1$Sequence, p1$batch)
p2 = read.csv("F:/RA/第一次投稿/审稿意见/附图1/plasma2 prob9 RT m_z.csv");p2$ID = paste(p2$Sequence, p2$batch)
s = read.csv("F:/RA/第一次投稿/审稿意见/附图1/synovium prob9 RT m_z.csv");s$ID = paste(s$Sequence, s$Raw.file)
rm(list =ls())
p1 = read.csv("prob9 RT m_z.csv");p1$ID = paste(p1$Sequence, p1$batch)
p2 = read.csv("plasma2 prob9 RT m_z.csv");p2$ID = paste(p2$Sequence, p2$batch)
s = read.csv("synovium prob9 RT m_z.csv");s$ID = paste(s$Sequence, s$Raw.file)
all = rbind(p1[,c("ID","ID_PA","Sequence","Modifications","Proteins","Retention.time","m.z","prob9")],
p2[,c("ID","ID_PA","Sequence","Modifications","Proteins","Retention.time","m.z","prob9")],
s[,c("ID","ID_PA","Sequence","Modifications","Proteins","Retention.time","m.z","prob9")])
all$PAD = ifelse(all$Modifications == "2 PAD_WTQ_181030"|all$Modifications == "3 PAD_WTQ_181030"|all$Modifications == "PAD_WTQ_181030","PAD only",
ifelse(all$Modifications == "Unmodified","Unmodified","others"))
table(all$PAD)
PAD = all[all$PAD == "PAD only",]; colnames(PAD)[6] = c("Retention.time PAD")
identified = readxl::read_xlsx("G:/scan raw/results/2503（三个数据prob 0.9,TMTc ratio 0.01,去除C末端cit的并集）二级谱图的结果.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
PAD$ID_PA = gsub("\\(pa\\)","\\(cit\\)",PAD$ID_PA)
PAD = PAD[PAD$ID_PA %in% identified$ID_PA,]
length(unique(PAD$ID_PA))
unmod = all[all$PAD == "Unmodified",]
names(PAD)
all1 = merge(PAD[,c("ID", "Retention.time PAD")], unmod[,c("ID", "Retention.time")], by="ID", all=T)%>% na.omit()
library(RColorBrewer)
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(all1, aes(`Retention.time`,`Retention.time PAD`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap)+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
View(all1)
colnames(all1) = c("Sequence batch","m_z value of citrullinated peptides","m_z value of unmodified peptides")
library(RColorBrewer)
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(all1, aes(`m_z value of unmodified peptides`,`m_z value of citrullinated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap)+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
library(ggplot2)
ggplot(all1, aes(`m_z value of unmodified peptides`,`m_z value of citrullinated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap)+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
ggsave("Fig 1h.pdf", width = 3.8, height = 3)
write.csv(all1,"Evaluating peptides' hydrophobicity change after citrullination.csv", row.names = F)
rm(list =ls())
data = data.table::fread("Evaluating peptides' hydrophobicity change after citrullination.csv")
library(RColorBrewer)
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(data, aes(`m_z value of unmodified peptides`,`m_z value of citrullinated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap)+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
ggsave("Fig 1h.pdf", width = 3.8, height = 3)
