theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
ggsave("Fig 1h.pdf", width = 3.8, height = 3)
setwd("F:/RA/第一次投稿/审稿意见/Fig 1/Deamidation")
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
rm(list =ls())
data = read.csv("三个队列 prob9 RT m_z.csv")
names(data)
data$ID = paste(data$dataset, data$Raw.file, data$Sequence)
all = data[,c("ID","ID_PA","Sequence","Modifications","Proteins","Retention.time","m.z")]
table(all$Modifications)
all$PAD = ifelse(all$Modifications == "2 Deamidation (NQ)"|all$Modifications == "3 Deamidation (NQ)"|all$Modifications == "4 Deamidation (NQ)"|all$Modifications == "5 Deamidation (NQ)"|all$Modifications == "Deamidation (NQ)","DE only",
ifelse(all$Modifications == "Unmodified","Unmodified","others"))
table(all$PAD)
PAD = all[all$PAD == "DE only",]; colnames(PAD)[6] = c("Retention.time DE")
# 读取鉴定文件
dat = read.csv("F:/RA/第一次投稿/审稿意见/Fig 1/Deamidation/data clean step2/三个队列 pro9 removed_CON_REV_othermodifications filtered_prob adjusted_sum divided_by_IS sample_name TMCcounts1.csv")
PAD = PAD[PAD$ID_PA %in% dat$ID_PA,]
length(unique(PAD$ID_PA))
unmod = all[all$PAD == "Unmodified",]
names(PAD)
all1 = merge(PAD[,c("ID", "Retention.time DE")], unmod[,c("ID", "Retention.time")], by="ID", all=T)%>% na.omit()
library(RColorBrewer)
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(all1, aes(`Retention.time`,`Retention.time DE`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
library(ggplot2)
ggplot(all1, aes(`Retention.time`,`Retention.time DE`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
# 跟瓜氨酸化数目一致
set.seed(123)
PAD = PAD[PAD$ID_PA %in% sample(unique(PAD$ID_PA), 1961),] # 和使用的做这个图的瓜氨酸化肽段数目一样，但是后边匹配非修饰肽段之后，数目还是会不一样
unmod = all[all$PAD == "Unmodified",]
names(PAD)
all1 = merge(PAD[,c("ID", "Retention.time DE")], unmod[,c("ID", "Retention.time")], by="ID", all=T)%>% na.omit()
library(RColorBrewer)
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(all1, aes(`Retention.time`,`Retention.time DE`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
write.csv(all1,"Evaluating peptides' hydrophobicity change after deamidation.csv", row.names = F)
setwd("H:/20250330 figure+code/Figure 1/Fig. 1h")
setwd("H:/20250330 figure+code/Figure 1/Fig. 1h,i")
######################################## Evaluating peptides' hydrophobicity change after deamidation
rm(list =ls())
data = data.table::fread("Evaluating peptides' hydrophobicity change after deamidation.csv")
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(data, aes(`m_z value of unmodified peptides`,`m_z value of citrullinated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
data = data.table::fread("Evaluating peptides' hydrophobicity change after deamidation.csv")
View(data)
colnames(data) = c("Sequence raw_file","m_z value of deamidated peptides","m_z value of deamidated peptides")
write.csv(data,"Evaluating peptides' hydrophobicity change after deamidation.csv", row.names = F)
######################################## Evaluating peptides' hydrophobicity change after deamidation
rm(list =ls())
data = data.table::fread("Evaluating peptides' hydrophobicity change after deamidation.csv")
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(data, aes(`m_z value of unmodified peptides`,`m_z value of citrullinated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
View(data)
######################################## Evaluating peptides' hydrophobicity change after deamidation
rm(list =ls())
data = data.table::fread("Evaluating peptides' hydrophobicity change after deamidation.csv")
colormap <- rev(brewer.pal(20,"Spectral"))
ggplot(data, aes(`m_z value of unmodified peptides`,`m_z value of deaminated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
ggplot(data, aes(`m_z value of unmodified peptides`,`m_z value of deamidated peptides`))+
stat_bin2d(bins=50)+geom_abline(intercept = 0, slope = 1, linewidth = .7)+
scale_fill_gradientn(colors = colormap, breaks=c(100,300,500))+
theme_classic()+
scale_x_continuous(expand = c(0,0),limits = c(0,100))+
scale_y_continuous(expand = c(0,0),limits = c(0,100))+
theme(axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
ggsave("Fig 1i.pdf", width = 3.8, height = 3)
setwd("H:/20250330 figure+code/Figure 3/1. Differential analysis")
library(dplyr)
library(ggplot2)
library(ggpubr)
########################################### Female
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
View(data1)
########################################### Female
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
View(data1)
########################################### Female
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data1[,c(12:ncol(data1))] = lapply(data1[,c(12:ncol(data1))], as.numeric)
table(data1$Gender)
data=data1%>%filter(Gender=="Female")
G1=data[data$Group=="Health"|data$Group=="preRA",]
G2=data[data$Group=="Health"|data$Group=="RA_A",]
G3=data[data$Group=="RA_A"|data$Group=="preRA",]
table(G1$group);table(G2$group);table(G3$group)
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$group=="preRA"],na.rm=T)-median(x[G1$group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$group=="Health",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$group=="preRA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$group=="RA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",15:ncol(data)], function(x){median(x, na.rm=T)}))
result$preRA_Health=ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health<log2(1/1.2),"down", ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health>log2(1.2),"up", "ns")); table(result$preRA_Health)
result$RAA_Health=ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health<log2(1/1.2),"down", ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health>log2(1.2),"up", "ns")); table(result$RAA_Health)
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$group=="preRA"],na.rm=T)-median(x[G1$group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$group=="Health",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$group=="preRA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$group=="RA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",15:ncol(data)], function(x){median(x, na.rm=T)}))
########################################### Female
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data1[,c(12:ncol(data1))] = lapply(data1[,c(12:ncol(data1))], as.numeric)
table(data1$Gender)
table(data1$Sex)
data=data1%>%filter(Sex=="Female")
G1=data[data$Group=="Health"|data$Group=="preRA",]
G2=data[data$Group=="Health"|data$Group=="RA_A",]
G3=data[data$Group=="RA_A"|data$Group=="preRA",]
table(G1$group);table(G2$group);table(G3$group)
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$group=="preRA"],na.rm=T)-median(x[G1$group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$group=="Health",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$group=="preRA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$group=="RA",15:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",15:ncol(data)], function(x){median(x, na.rm=T)}))
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$group=="preRA"],na.rm=T)-median(x[G1$group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$group=="RA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$Group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$Group=="preRA"],na.rm=T)-median(x[G1$Group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$Group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$Group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$Group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$Group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$group=="RA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$Group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$Group=="preRA"],na.rm=T)-median(x[G1$Group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$Group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$Group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$Group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$Group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$Group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$Group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA=sapply(data[data$Group=="RA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$Group)))){NA}else{wilcox.test(x~G1$group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$Group=="preRA"],na.rm=T)-median(x[G1$Group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$Group)))){NA}else{wilcox.test(x~G2$group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$Group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$Group)))){NA}else{wilcox.test(x~G3$group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$Group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$Group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$Group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$Group)))){NA}else{wilcox.test(x~G1$Group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$Group=="preRA"],na.rm=T)-median(x[G1$Group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$Group)))){NA}else{wilcox.test(x~G2$Group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$Group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$Group)))){NA}else{wilcox.test(x~G3$Group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$Group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$Group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$Group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result$preRA_Health=ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health<log2(1/1.2),"down", ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health>log2(1.2),"up", "ns")); table(result$preRA_Health)
result$RAA_Health=ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health<log2(1/1.2),"down", ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health>log2(1.2),"up", "ns")); table(result$RAA_Health)
result$RAA_preRA=ifelse(result$p_RAA_preRA_wilcox<0.05 & result$fc_RAA_preRA<log2(1/1.2),"down", ifelse(result$p_RAA_preRA_wilcox<0.05 & result$fc_RAA_preRA>log2(1.2),"up", "ns")); table(result$RAA_preRA)
colnames(result)=paste("F",colnames(result), sep="_")
write.csv(result,"wilcox result RA_A female.csv", row.names = F)
########################################### Male
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data1[,c(12:ncol(data1))] = lapply(data1[,c(12:ncol(data1))], as.numeric)
table(data1$Sex)
data=data1%>%filter(Sex=="Male")
G1=data[data$Group=="Health"|data$Group=="preRA",]
G2=data[data$Group=="Health"|data$Group=="RA_A",]
G3=data[data$Group=="RA_A"|data$Group=="preRA",]
table(G1$group);table(G2$group);table(G3$group)
result=NULL
result=data.frame(ID=colnames(data)[12:ncol(data)],
p_preRA_Health_wilcox=sapply(G1[,12:(ncol(G1))], function(x){if("try-error"%in%class(try(wilcox.test(x~G1$Group)))){NA}else{wilcox.test(x~G1$Group)[["p.value"]]}}),
fc_preRA_Health=sapply(G1[,12:(ncol(G1))], function(x){median(x[G1$Group=="preRA"],na.rm=T)-median(x[G1$Group=="Health"],na.rm=T)}),
p_RAA_Health_wilcox=sapply(G2[,12:(ncol(G2))], function(x){if("try-error"%in%class(try(wilcox.test(x~G2$Group)))){NA}else{wilcox.test(x~G2$Group)[["p.value"]]}}),
fc_RAA_Health=sapply(G2[,12:(ncol(G2))], function(x){median(x[G2$Group=="RA_A"],na.rm=T)-median(x[G2$Group=="Health"],na.rm=T)}),
p_RAA_preRA_wilcox=sapply(G3[,12:(ncol(G3))], function(x){if("try-error"%in%class(try(wilcox.test(x~G3$Group)))){NA}else{wilcox.test(x~G3$Group)[["p.value"]]}}),
fc_RAA_preRA=sapply(G3[,12:(ncol(G3))], function(x){median(x[G3$Group=="RA_A"],na.rm=T)-median(x[G3$Group=="preRA"],na.rm=T)}),
median_Health=sapply(data[data$Group=="Health",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_preRA=sapply(data[data$Group=="preRA",12:ncol(data)], function(x){median(x, na.rm=T)}),
median_RA_A=sapply(data[data$Group=="RA_A",12:ncol(data)], function(x){median(x, na.rm=T)}))
result$preRA_Health=ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health<log2(1/1.2),"down", ifelse(result$p_preRA_Health_wilcox<0.05 & result$fc_preRA_Health>log2(1.2),"up", "ns")); table(result$preRA_Health)
result$RAA_Health=ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health<log2(1/1.2),"down", ifelse(result$p_RAA_Health_wilcox<0.05 & result$fc_RAA_Health>log2(1.2),"up", "ns")); table(result$RAA_Health)
result$RAA_preRA=ifelse(result$p_RAA_preRA_wilcox<0.05 & result$fc_RAA_preRA<log2(1/1.2),"down", ifelse(result$p_RAA_preRA_wilcox<0.05 & result$fc_RAA_preRA>log2(1.2),"up", "ns")); table(result$RAA_preRA)
colnames(result)=paste("M",colnames(result), sep="_")
write.csv(result,"wilcox result RA_A male.csv", row.names = F)
setwd("H:/20250330 figure+code/Figure 3/Fig 3a,3b")
library(ggplot2)
rm(list = ls())
result=read.csv("wilcox result RA_A female.csv")
rm(list = ls())
result=read.csv("H:/20250330 figure+code/Figure 3/1. Differential analysis/wilcox result RA_A female.csv")
result1=read.csv("H:/20250330 figure+code/Figure 3/1. Differential analysis/wilcox result RA_A male.csv")
result=cbind(result,result1)
result$color=ifelse(result$F_preRA_Health=="up" & result$M_preRA_Health=="up","up",
ifelse(result$F_preRA_Health=="down" & result$M_preRA_Health=="down","down","ns")); table(result$color)
ggplot(result, aes(x=F_fc_preRA_Health, y=M_fc_preRA_Health, color=color))+
geom_abline(intercept = 0, slope = 1, linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_hline(yintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_point()+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"),name="")+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
cor.test(result$F_fc_preRA_Health, result$M_fc_preRA_Health, method="spearman")
result$color=ifelse(result$F_RAA_Health=="up" & result$M_RAA_Health=="up","up",
ifelse(result$F_RAA_Health=="down" & result$M_RAA_Health=="down","down","ns")); table(result$color)
ggplot(result, aes(x=F_fc_RAA_Health, y=M_fc_RAA_Health, color=color))+
geom_abline(intercept = 0, slope = 1, linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_hline(yintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_point()+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"),name="")+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
cor.test(result$F_fc_RAA_Health, result$M_fc_RAA_Health, method="spearman")
ggsave("volcano RAA_HC F_M.pdf", width = 3.8, height = 3)
rm(list = ls())
result=read.csv("H:/20250330 figure+code/Figure 3/1. Differential analysis/wilcox result RA_A female.csv")
result1=read.csv("H:/20250330 figure+code/Figure 3/1. Differential analysis/wilcox result RA_A male.csv")
result=cbind(result,result1)
result$color=ifelse(result$F_preRA_Health=="up" & result$M_preRA_Health=="up","up",
ifelse(result$F_preRA_Health=="down" & result$M_preRA_Health=="down","down","ns")); table(result$color)
ggplot(result, aes(x=F_fc_preRA_Health, y=M_fc_preRA_Health, color=color))+
geom_abline(intercept = 0, slope = 1, linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_hline(yintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_point()+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"),name="")+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
ggsave("volcano preRA_Health F_M.pdf", width = 3.8, height = 3)
cor.test(result$F_fc_preRA_Health, result$M_fc_preRA_Health, method="spearman")
########################################### all samples
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data[,c(12:ncol(data))] = lapply(data[,c(12:ncol(data))], as.numeric)
table(data$Group)
setwd("H:/20250330 figure+code/Figure 3/1. Differential analysis")
########################################### all samples
rm(list=ls())
data1=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data[,c(12:ncol(data))] = lapply(data[,c(12:ncol(data))], as.numeric)
table(data$Group)
########################################### all samples
rm(list=ls())
########################################### all samples
rm(list=ls())
data=read.csv("log2 rb clinical 331_579_checked.csv", header = T)
data[,c(12:ncol(data))] = lapply(data[,c(12:ncol(data))], as.numeric)
table(data$Group)
i = 31
re = NULL
View(data)
View(data)
i = 31
re = NULL
for(i in 12:ncol(data)){
ID = gsub("\\.cit\\.", "(cit)", colnames(data)[i])
# PRA vs HC
d = data[data$Group=="Health" | data$Group=="preRA",c(2,i)] %>% na.omit(); colnames(d)[2]="variable"
if(length(table(d$Group))<2){p_PRA_vs_HC = NA; fc_PRA_vs_HC = NA; n_PRA = nrow(d[d$Group=="preRA",]); n_HC = nrow(d[d$Group=="Health",])}else{
n_PRA = table(d$Group)[2]; n_HC = table(d$Group)[1]
if(n_PRA<5 | n_HC<5){p_PRA_vs_HC = NA; fc_PRA_vs_HC = NA}else{
p_PRA_vs_HC = wilcox.test(d$variable~d$Group)[["p.value"]]
fc_PRA_vs_HC = median(d$variable[d$Group=="preRA"],na.rm=T)-median(d$variable[d$Group=="Health"],na.rm=T)
}
}
median_HC=median(d$variable[d$Group=="Health"],na.rm=T)
median_PRA=median(d$variable[d$Group=="preRA"],na.rm=T)
# RAA vs HC
d = data[data$Group=="Health" | data$Group=="RA_A",c(2,i)] %>% na.omit(); colnames(d)[2]="variable"
if(length(table(d$Group))<2){p_RAA_vs_HC = NA; fc_RAA_vs_HC = NA; n_RAA = nrow(d[d$Group=="RA_A",]); n_HC = nrow(d[d$Group=="Health",])}else{
n_RAA = table(d$Group)[2]; n_HC = table(d$Group)[1]
if(n_RAA<5 | n_HC<5){p_RAA_vs_HC = NA; fc_RAA_vs_HC = NA}else{
p_RAA_vs_HC = wilcox.test(d$variable~d$Group)[["p.value"]]
fc_RAA_vs_HC = median(d$variable[d$Group=="RA_A"],na.rm=T)-median(d$variable[d$Group=="Health"],na.rm=T)
}
}
median_RAA=median(d$variable[d$Group=="RA_A"],na.rm=T)
re = rbind(re, data.frame(i,ID, n_PRA, n_HC, n_RAA, p_PRA_vs_HC, fc_PRA_vs_HC, p_RAA_vs_HC, fc_RAA_vs_HC, median_HC, median_PRA, median_RAA))
}
re$sig_PRA_HC = ifelse(re$p_PRA_vs_HC<0.05 & re$fc_PRA_vs_HC>log2(1.2),"up in PRA, wilcox",ifelse(re$p_PRA_vs_HC<0.05 & re$fc_PRA_vs_HC<log2(1/1.2),"down in PRA, wilcox","ns"))
re$sig_RAA_HC = ifelse(re$p_RAA_vs_HC<0.05 & re$fc_RAA_vs_HC>log2(1.2),"up in RAA, wilcox",ifelse(re$p_RAA_vs_HC<0.05 & re$fc_RAA_vs_HC<log2(1/1.2),"down in RAA, wilcox","ns"))
table(re$sig_PRA_HC); table(re$sig_RAA_HC)
write.csv(re,"wilcox result atleast5.csv", row.names = F)
setwd("H:/20250330 figure+code/Figure 3/Fig. 3c,3e")
setwd("H:/20250330 figure+code/Figure 3/Fig. 3c,3e")
library(ggplot2)
result=read.csv("H:/20250330 figure+code/Figure 3/1. Differential analysis/wilcox result atleast5.csv", header = T,row.names = 1)
ggplot(result, aes(x=fc_PRA_HP, y=-log10(p_PRA_HP_wilcox), color=PRA_HP))+
geom_point()+
geom_hline(yintercept = -log10(0.05), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"))+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
names(result)
ggplot(result, aes(x=fc_PRA_vs_HC, y=-log10(p_PRA_vs_HC), color=sig_PRA_HC))+
geom_point()+
geom_hline(yintercept = -log10(0.05), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"))+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
ggsave("Fig 3c.pdf", width = 3.8, height = 3)
ggplot(result, aes(x=fc_RAA_vs_HC, y=-log10(p_RAA_vs_HC), color=sig_RAA_HC))+
geom_point()+
geom_hline(yintercept = -log10(0.05), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"))+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
ggsave("Fig 3e.pdf", width = 3.8, height = 3)
setwd("H:/20250330 figure+code/Figure 3/2. k-means clustering & Fig. 3i")
library(dplyr)
library(ComplexHeatmap)
library(circlize)
library(TCseq)
rm(list = ls())
result=read.csv("wilcox result atleast5 checked.csv", header = T,row.names = 1)
names(result)
dat=result[,c("median_HC","median_PRA","median_RAA")]
df<-as.matrix(dat)
set.seed(123)
cluster_num<-4
cluster<-timeclust(df, algo='km',k=cluster_num, standardize = TRUE)
p <- timeclustplot(cluster, value = 'z-score', cols = 1,
membership.color = rainbow(30, s = 3/4, v = 1, start = 1/6),
axis.line.size = 0.6, axis.title.size = 8, axis.text.size = 8,
title.size = 8, legend.title.size = 8, legend.text.size = 8)
#最后，提取所有蛋白所属的聚类群，并和它们的原始表达值整合在一起
citsite_cluster <-data.frame(cluster@cluster) ;citsite_cluster$ID=rownames(citsite_cluster)
table(cluster@cluster)
dat$ID=rownames(dat)
citsite_cluster1 <- merge(citsite_cluster,dat,by="ID")
View(citsite_cluster1)
write.csv(citsite_cluster1,"cluster result.csv",row.names = F)
col_fun = colorRamp2(c(-1,0, 1), c("#5D669F","white","#AF322F"))
top_annotation = HeatmapAnnotation(df=data.frame(group=rep(c("Health","preRA","RA"), c(1,1,1))),
col = list(group=c(RA="#BF5960",Health="#6F99AD",preRA="#F9A363")))
Heatmap(t(scale(t(citsite_cluster1[,3:5]))),name = " ",
col = col_fun,
top_annotation = top_annotation,
row_split = citsite_cluster1$cluster.cluster,
#column_split = data$group[data$Group%in%c("HP","preRA","RA_A")],
cluster_columns = F,
#row_km=T,
cluster_rows = F,
#clustering_method_rows = "average",# "ward.D", "ward.D2", "single", "complete", "average" (= UPGMA), "mcquitty" (= WPGMA), "median" (= WPGMC) or "centroid" (= UPGMC).
#column_order=order(row.names(data)), #取消对列聚类
show_heatmap_legend = T,
border = F,
show_column_names = F,
show_row_names = F,
column_title = NULL)
pdf("Heatmap cluster.pdf",width = 3, height = 6)
Heatmap(t(scale(t(citsite_cluster1[,3:5]))),name = " ",
col = col_fun,
top_annotation = top_annotation,
row_split = citsite_cluster1$cluster.cluster,
cluster_columns = F,
cluster_rows = F,
show_heatmap_legend = T,
border = F,
show_column_names = F,
show_row_names = F,
column_title = NULL)
dev.off()
library(ggplot2)
citsite_cluster2=cbind(citsite_cluster1[,1:2],t(apply(citsite_cluster1[,3:5],1,scale)))
cc=reshape2::melt(citsite_cluster2,id.vars=1:2, measure.vars=3:5)
ggplot(cc[cc$cluster.cluster==1,])+
geom_line(aes(variable, scale(value), group=ID))+
#geom_boxplot(aes(variable, scale(value), color=variable), outlier.colour = NA)+
theme_classic()
ggplot(cc)+
geom_line(aes(variable, scale(value), color=as.factor(cluster.cluster), group=ID))+
geom_boxplot(aes(variable, scale(value)),color="black", outlier.colour = NA, width=.4, linewidth=.4)+
facet_wrap(.~cluster.cluster, nrow=4, scale="free")+
geom_hline(yintercept = 0,color="#BBBBBB", linetype=2, linewidth=.4)+
scale_y_continuous(breaks=c(-1,0,1))+
scale_x_discrete(expand = c(0.12,0.12))+
theme_classic()+
labs(x="")+
scale_color_manual(values = c("#F9A363","#AF322F","#8A86BC","#67A596"))+
theme(legend.position = "none",
axis.line = element_line(linewidth = .8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"),
strip.background = element_blank())
ggsave("clusters.pdf", width = 3, height = 11)
table(cc$cluster.cluster)
table(cluster@cluster)
set.seed("H:/20250330 figure+code/Figure 4/Fig. 4a,4b")
library(ggplot2)
set.seed("H:/20250330 figure+code/Figure 4/Fig. 4a,4b")
setwd("H:/20250330 figure+code/Figure 4/Fig. 4a,4b")
library(ggplot2)
rm(list = ls())
